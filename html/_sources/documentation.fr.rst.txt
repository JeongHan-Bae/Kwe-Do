.. orbitmagic documentation master file, created by JeongHan-Bae
   sphinx-quickstart on Sat Mar 18 21:54:37 2023.
   You can adapt this file completely to your liking, but it should at least
   contain the root `toctree` directive.

Bienvenue à la Documentation d'Orbitmagic!
============================================

**Orbitmagic**

La bibliothèque "orbitmagic" permet d'aider les magiciens à modéliser les orbites mathématiques. Elle est conçue pour les magiciens qui connaissent Python et les listes.
[Attention] Seulement les mélanges définis ont de l'orbit!

*Installation :*

Pour installer la bibliothèque, vous pouvez utiliser pip :

.. code-block:: console
   :class: no-wrap

   pip install orbitmagic

Fonctions Exposées
==================

Voici la liste des fonctions exposées par la bibliothèque :

*is_pack(pack: list[int]) -> bool*

Vérifie si une liste de nombres entiers représente un paquet de cartes valide.

Arguments :

pack : une liste de nombres entiers représentant un paquet de cartes.

Retour :

True si le paquet est valide, False sinon.


*is_init(pack: list[int]) -> bool*

Vérifie si une liste de nombres entiers représente le paquet de départ.

Arguments :

pack : une liste de nombres entiers représentant un paquet de cartes.

Retour :

True si le paquet est le paquet de départ, False sinon.

*orbit(mix:list[int]) -> int*

Calcule le nombre d'orbite d'un mélange à partir d'un paquet de cartes.

Arguments :

mix : une liste qui présente une façon de mélanger les cartes.

Retour :

un entier qui présente le nombre d'orbite du mélange.

*mix(pack: list[int], mix_method: list[int]) -> list[int]*

Mélange un paquet de cartes selon un type de mélange donné.

Arguments :

pack : une liste de nombres entiers représentant un paquet de cartes.

mix_method : une liste qui présente une façon de mélanger les cartes.

Retour :

une liste de nombres entiers représentant le paquet de cartes mélangé.

*reverse(mix_method: list[int]) -> list[int]*

Inverse le mélange d'un paquet de cartes selon un type de mélange donné.

Arguments :

mix_method : une liste qui présente une façon de mélanger les cartes.

Retour :

une liste de nombres entiers représentant un mélange qui est l'inversion du mélange donné.

*cycle(mix_method: list[int], k: int) -> list[int]*

Calcule la condition du paquet de départ mélangé k fois par le mélange donné.

(Aussi un mélange équivalent à mélanger k fois par le mélange donné.)

Arguments :

pack : une liste de nombres entiers représentant un paquet de cartes.

k : nombre de itération (peut être négatif).

Retour :

une liste de nombres entiers représentant le mélange équivalent.

*rev_cycle(mix_method: list[int], k: int) -> list[int]*

Similaire à la fonction cycle, mais au lieu d'utiliser mix_method, elle boucle avec reverse(mix_method).

Arguments :

pack : une liste de nombres entiers représentant un paquet de cartes.

k : nombre de itération (peut être négatif).

Retour :

une liste de nombres entiers représentant le mélange équivalent.

*all_cases(mix_method: list[int]) -> list[list[int]]*

Calcule toutes les itérations du mélange donné justqu'au paquet revient au paquet de départ.

Arguments :

mix_method : une liste qui présente une façon de mélanger les cartes.

Retour :

une liste de liste avec chaque élément (liste de int) une itération du mélange donné.

*find_mix(pack0: list[int], pack1: list[int]) -> list[int]*

Calcule un mélange selon les conditions du paquet avant et après le mélange.

Arguments :

pack0 : une liste de nombres entiers représentant un paquet de cartes avant un mélange.

pack1 : une liste de nombres entiers représentant le paquet de cartes après le mélange.

Retour :

une liste de nombres entiers représentant le mélange.

*pack_init(n: int) -> list[int]*

Crée le paquet de départ de n cartes.

Arguments :

n :

un entier qui est le nombre total des cartes du paquet.

Retour :

une liste de nombres entiers représentant le paquet de départ.

Plus
==================
For English version, please viste `English Version <index.html>`_.

Nous Contacter `https://github.com/JeongHan-Bae <https://github.com/JeongHan-Bae>`_.


`Recherche <search.html>`_.